name: CI / CD
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: Test with Node v${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        node: [12, 14, 16]

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup Node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Install package and example dependencies
        run: npx lerna bootstrap --force-local

      - name: Build packages
        run: npm run build

      - name: Test packages
        run: npm run test

  release:
    if: github.ref == 'refs/heads/main'
    name: npm publish / GitHub release
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        run: npm ci
        env:
          CI: true

      - name: Install package and example dependencies
        run: npx lerna bootstrap --force-local

      - name: Build
        run: npm run build

      - name: Semantic Release
        if: success()
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx lerna exec --concurrency 1 -- npx --no-install semantic-release -e semantic-release-monorepo
